version: "3.9"

#
# Docker compose without services for traceo and worker. 
# To using probably only in development.
# Fill in envs from configs/backend/.env-example in order to use this services.
#

services:
  postgres:
    container_name: traceo-db
    image: postgres:14
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - traceo:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=traceo
      - POSTGRES_USER=traceo
      - POSTGRES_PASSWORD=traceo

  clickhouse:
    container_name: traceo-clickhouse
    image: clickhouse/clickhouse-server:23.7.1
    restart: on-failure
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9440:9440"
      - "9009:9009"
    depends_on:
      - kafka
    volumes:
      - clickhouse-data:/var/lib/clickhouse

  zookeeper:
    container_name: traceo-zookeeper
    image: zookeeper:3.7.0
    restart: on-failure
    volumes:
      - zookeeper-datalog:/datalog
      - zookeeper-data:/data
      - zookeeper-logs:/logs

  kafka:
    container_name: traceo-kafka
    image: bitnami/kafka:2.8.1-debian-10-r99
    restart: on-failure
    depends_on:
        - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka:29092"]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1001
      - KAFKA_CFG_RESERVED_BROKER_MAX_ID=1001
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:29092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=true

volumes:
  traceo:
  clickhouse-data:
  zookeeper-datalog:
  zookeeper-data:
  zookeeper-logs:
